version: "3"

services:
  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    restart: unless-stopped
    networks:
      media_ntw:
        ipv4_address: 172.24.69.10
      proxy:
    volumes:
      - jellyfin_config:/config
      - jellyfin_cache:/cache
      - ${STORAGE}:/media:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.entrypoints=http"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.local.${MY_DOMAIN}`, `jellyfin.${MY_DOMAIN}`)"
      - "traefik.http.middlewares.jellyfin-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.jellyfin.middlewares=jellyfin-https-redirect"
      - "traefik.http.routers.jellyfin-secure.entrypoints=https"
      - "traefik.http.routers.jellyfin-secure.rule=Host(`jellyfin.local.${MY_DOMAIN}`, `jellyfin.${MY_DOMAIN}`)"
      - "traefik.http.routers.jellyfin-secure.tls=true"
      - "traefik.http.routers.jellyfin-secure.service=jellyfin"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
      - "traefik.docker.network=proxy"
    env_file:
      - jelly.env
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

  transmission:
    image: haugene/transmission-openvpn:latest
    container_name: transmission
    cap_add:
      - NET_ADMIN
    restart: always
    volumes:
      - transmission_data:/config
      - ${STORAGE}:/data 
    logging:
      driver: json-file
      options:
        max-size: 20m
    env_file:
      - .env
    networks:
      media_ntw:
        ipv4_address: 172.24.69.11
      proxy:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.transmission.entrypoints=http"
      - "traefik.http.routers.transmission.rule=Host(`transmission.local.${MY_DOMAIN}`)"
      - "traefik.http.middlewares.transmission-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.transmission.middlewares=transmission-https-redirect"
      - "traefik.http.routers.transmission-secure.entrypoints=https"
      - "traefik.http.routers.transmission-secure.rule=Host(`transmission.local.${MY_DOMAIN}`)"
      - "traefik.http.routers.transmission-secure.tls=true"
      - "traefik.http.routers.transmission-secure.service=transmission"
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
      - "traefik.docker.network=proxy"

  jackett:
    image: linuxserver/jackett:latest
    container_name: jackett
    restart: always
    volumes:
      - jackett_data:/config
      - ${STORAGE}/blackhole:/data/downloads
    environment:
      - UID=1000
      - GID=1000
    env_file:
      - .env
    networks:
      media_ntw:
        ipv4_address: 172.24.69.12
      proxy: 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jackett.entrypoints=http"
      - "traefik.http.routers.jackett.rule=Host(`jackett.local.${MY_DOMAIN}`)"
      - "traefik.http.middlewares.jackett-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.jackett.middlewares=jackett-https-redirect"
      - "traefik.http.routers.jackett-secure.entrypoints=https"
      - "traefik.http.routers.jackett-secure.rule=Host(`jackett.local.${MY_DOMAIN}`)"
      - "traefik.http.routers.jackett-secure.tls=true"
      - "traefik.http.routers.jackett-secure.service=jackett"
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"
      - "traefik.docker.network=proxy"

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
    networks:
      media_ntw:
        ipv4_address: 172.24.69.13
      proxy: 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flaresolverr.entrypoints=http"
      - "traefik.http.routers.flaresolverr.rule=Host(`flaresolverr.local.${MY_DOMAIN}`)"
      - "traefik.http.middlewares.flaresolverr-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.flaresolverr.middlewares=flaresolverr-https-redirect"
      - "traefik.http.routers.flaresolverr-secure.entrypoints=https"
      - "traefik.http.routers.flaresolverr-secure.rule=Host(`flaresolverr.local.${MY_DOMAIN}`)"
      - "traefik.http.routers.flaresolverr-secure.tls=true"
      - "traefik.http.routers.flaresolverr-secure.service=flaresolverr"
      - "traefik.http.services.flaresolverr.loadbalancer.server.port=8191"
      - "traefik.docker.network=proxy"

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: always 
    volumes:
      - sonarr_data:/config
      - ${STORAGE}/shows:/shows
      - ${STORAGE}/downloads:/data/downloads
    environment:
      - UID=1000
      - GID=1000
    env_file:
      - .env
    networks:
      media_ntw:
        ipv4_address: 172.24.69.14
      proxy: 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.entrypoints=http"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.local.${MY_DOMAIN}`)"
      - "traefik.http.middlewares.sonarr-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.sonarr.middlewares=sonarr-https-redirect"
      - "traefik.http.routers.sonarr-secure.entrypoints=https"
      - "traefik.http.routers.sonarr-secure.rule=Host(`sonarr.local.${MY_DOMAIN}`)"
      - "traefik.http.routers.sonarr-secure.tls=true"
      - "traefik.http.routers.sonarr-secure.service=sonarr"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.docker.network=proxy"

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    restart: always 
    volumes:
      - radarr_data:/config
      - ${STORAGE}/movies:/movies
      - ${STORAGE}/downloads:/data/downloads
    environment:
      - UID=1000
      - GID=1000
    env_file:
      - .env
    networks:
      media_ntw:
        ipv4_address: 172.24.69.15
      proxy: 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.entrypoints=http"
      - "traefik.http.routers.radarr.rule=Host(`radarr.local.${MY_DOMAIN}`)"
      - "traefik.http.middlewares.radarr-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.radarr.middlewares=radarr-https-redirect"
      - "traefik.http.routers.radarr-secure.entrypoints=https"
      - "traefik.http.routers.radarr-secure.rule=Host(`radarr.local.${MY_DOMAIN}`)"
      - "traefik.http.routers.radarr-secure.tls=true"
      - "traefik.http.routers.radarr-secure.service=radarr"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.docker.network=proxy"

  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    restart: always 
    volumes:
      - bazarr_data:/config
      - ${STORAGE}/audiobooks:/data/audiobooks
      - ${STORAGE}/movies:/movies
      - ${STORAGE}/shows:/shows
    environment:
      - UID=1000
      - GID=1000
    env_file:
      - .env
    networks:
      media_ntw:
        ipv4_address: 172.24.69.16
      proxy: 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.entrypoints=http"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.local.${MY_DOMAIN}`)"
      - "traefik.http.middlewares.bazarr-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.bazarr.middlewares=bazarr-https-redirect"
      - "traefik.http.routers.bazarr-secure.entrypoints=https"
      - "traefik.http.routers.bazarr-secure.rule=Host(`bazarr.local.${MY_DOMAIN}`)"
      - "traefik.http.routers.bazarr-secure.tls=true"
      - "traefik.http.routers.bazarr-secure.service=bazarr"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
      - "traefik.docker.network=proxy"

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: always 
    volumes:
      - jellyseerr_data:/app/config
    environment:
      - LOG_LEVEL=debug
    env_file:
      - .env
    networks:
      media_ntw:
        ipv4_address: 172.24.69.17
      proxy: 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyseerr.entrypoints=http"
      - "traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.local.${MY_DOMAIN}`, `jellyseerr.${MY_DOMAIN}`)"
      - "traefik.http.middlewares.jellyseerr-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.jellyseerr.middlewares=jellyseerr-https-redirect"
      - "traefik.http.routers.jellyseerr-secure.entrypoints=https"
      - "traefik.http.routers.jellyseerr-secure.rule=Host(`jellyseerr.local.${MY_DOMAIN}`, `jellyseerr.${MY_DOMAIN}`)"
      - "traefik.http.routers.jellyseerr-secure.tls=true"
      - "traefik.http.routers.jellyseerr-secure.service=jellyseerr"
      - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"
      - "traefik.docker.network=proxy"

  jfaccount:
    image: hrfee/jfa-go:latest
    container_name: jellyfin_accounts
    restart: always
    volumes:
      - jellyfin_accounts_data:/data
      - jellyfin_config:/jf
      - /etc/localtime:/etc/localtime:ro 
    extra_hosts:
      - "jellyfin.insley.cloud:192.168.200.109"
    networks:
      media_ntw:
        ipv4_address: 172.24.69.18
      proxy: 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin-accounts.entrypoints=http"
      - "traefik.http.routers.jellyfin-accounts.rule=Host(`jellyfin-accounts.local.${MY_DOMAIN}`, `jellyfin-accounts.${MY_DOMAIN}`)"
      - "traefik.http.middlewares.jellyfin-accounts-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.jellyfin-accounts.middlewares=jellyfin-accounts-https-redirect"
      - "traefik.http.routers.jellyfin-accounts-secure.entrypoints=https"
      - "traefik.http.routers.jellyfin-accounts-secure.rule=Host(`jellyfin-accounts.local.${MY_DOMAIN}`, `jellyfin-accounts.${MY_DOMAIN}`)"
      - "traefik.http.routers.jellyfin-accounts-secure.tls=true"
      - "traefik.http.routers.jellyfin-accounts-secure.service=jellyfin-accounts"
      - "traefik.http.services.jellyfin-accounts.loadbalancer.server.port=8056"
      - "traefik.docker.network=proxy"



volumes:
  jellyfin_cache:
    external: true
  jellyfin_accounts_data:
    external: true 
  jellyfin_config:
    external: true
  transmission_data:
    external: true
  jackett_data:
    external: true
  sonarr_data:
    external: true
  radarr_data:
    external: true
  bazarr_data:
    external: true 
  jellyseerr_data:
    external: true 

networks:
  proxy:
    external: true
  media_ntw:
    external: true 